//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SilcoSedonaCustomApi
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Silco_FinalEntities1 : DbContext
    {
        public Silco_FinalEntities1()
            : base("name=Silco_FinalEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<CustSilco_AllInspForSiteServiceComp_Result> CustSilco_AllInspForSiteServiceComp(Nullable<int> siteid, Nullable<int> servicecompany)
        {
            var siteidParameter = siteid.HasValue ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(int));
    
            var servicecompanyParameter = servicecompany.HasValue ?
                new ObjectParameter("servicecompany", servicecompany) :
                new ObjectParameter("servicecompany", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustSilco_AllInspForSiteServiceComp_Result>("CustSilco_AllInspForSiteServiceComp", siteidParameter, servicecompanyParameter);
        }
    
        public virtual int CustSilco_SV_Inspection(Nullable<int> inspectionid, Nullable<System.DateTime> nextdate, Nullable<int> routeid)
        {
            var inspectionidParameter = inspectionid.HasValue ?
                new ObjectParameter("inspectionid", inspectionid) :
                new ObjectParameter("inspectionid", typeof(int));
    
            var nextdateParameter = nextdate.HasValue ?
                new ObjectParameter("nextdate", nextdate) :
                new ObjectParameter("nextdate", typeof(System.DateTime));
    
            var routeidParameter = routeid.HasValue ?
                new ObjectParameter("routeid", routeid) :
                new ObjectParameter("routeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustSilco_SV_Inspection", inspectionidParameter, nextdateParameter, routeidParameter);
        }
    
        public virtual int CustSilco_InsertEditLog(string user, string inspectiontype, string systemcode, string sitecode, string action, string code, Nullable<int> customernumber)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var inspectiontypeParameter = inspectiontype != null ?
                new ObjectParameter("inspectiontype", inspectiontype) :
                new ObjectParameter("inspectiontype", typeof(string));
    
            var systemcodeParameter = systemcode != null ?
                new ObjectParameter("systemcode", systemcode) :
                new ObjectParameter("systemcode", typeof(string));
    
            var sitecodeParameter = sitecode != null ?
                new ObjectParameter("sitecode", sitecode) :
                new ObjectParameter("sitecode", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var customernumberParameter = customernumber.HasValue ?
                new ObjectParameter("customernumber", customernumber) :
                new ObjectParameter("customernumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustSilco_InsertEditLog", userParameter, inspectiontypeParameter, systemcodeParameter, sitecodeParameter, actionParameter, codeParameter, customernumberParameter);
        }
    
        public virtual ObjectResult<CustSilco_SelectInvoicesForPastDues_Result> CustSilco_SelectInvoicesForPastDues(Nullable<int> siteid, Nullable<int> customerid)
        {
            var siteidParameter = siteid.HasValue ?
                new ObjectParameter("siteid", siteid) :
                new ObjectParameter("siteid", typeof(int));
    
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustSilco_SelectInvoicesForPastDues_Result>("CustSilco_SelectInvoicesForPastDues", siteidParameter, customeridParameter);
        }
    }
}
