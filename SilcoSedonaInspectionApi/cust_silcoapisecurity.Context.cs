//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SilcoSedonaInspectionApi
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Cust_SilcoEntities : DbContext
    {
        public Cust_SilcoEntities()
            : base("name=Cust_SilcoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<SelectAPISecurity_Result> SelectAPISecurity(Nullable<int> applicationid)
        {
            var applicationidParameter = applicationid.HasValue ?
                new ObjectParameter("applicationid", applicationid) :
                new ObjectParameter("applicationid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAPISecurity_Result>("SelectAPISecurity", applicationidParameter);
        }
    
        public virtual ObjectResult<UpdateSvticketuserdef_Result> UpdateSvticketuserdef(Nullable<int> ticketnumber, string inreviewflag)
        {
            var ticketnumberParameter = ticketnumber.HasValue ?
                new ObjectParameter("ticketnumber", ticketnumber) :
                new ObjectParameter("ticketnumber", typeof(int));
    
            var inreviewflagParameter = inreviewflag != null ?
                new ObjectParameter("inreviewflag", inreviewflag) :
                new ObjectParameter("inreviewflag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateSvticketuserdef_Result>("UpdateSvticketuserdef", ticketnumberParameter, inreviewflagParameter);
        }
    
        public virtual ObjectResult<InsertExceptionAPI_Result> InsertExceptionAPI(string usercode, string exceptiontxt)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("usercode", usercode) :
                new ObjectParameter("usercode", typeof(string));
    
            var exceptiontxtParameter = exceptiontxt != null ?
                new ObjectParameter("exceptiontxt", exceptiontxt) :
                new ObjectParameter("exceptiontxt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertExceptionAPI_Result>("InsertExceptionAPI", usercodeParameter, exceptiontxtParameter);
        }
    }
}
